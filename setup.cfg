[mypy]
python_version = 3.10
namespace_packages = True
incremental = False
cache_dir = nul
warn_redundant_casts = True
warn_return_any = True
warn_unused_configs = True
warn_unused_ignores = False
allow_redefinition = True
disallow_untyped_calls = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = False
strict_optional = True
strict_equality = True
explicit_package_bases = True
follow_imports = skip
ignore_missing_imports = True

[coverage:run]
# uncomment the following to omit files during running
#omit =
[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    def main
show_missing = true
#fail_under = 0

[tox:tox]
isolated_build = true
envlist = py310, py311, format, lint, build

[gh-actions]
python =
    3.11: py311
    3.10: py310, format, lint, build

[testenv]
allowlist_externals = pytest
extras =
    test
passenv = *
setenv =
    PYTHONPATH = {toxinidir}
    PYTHONWARNINGS = ignore
commands =
	 pytest --cov=./viserna --cov-branch --cov-report=xml --cov-report=term-missing tests

[testenv:format]
allowlist_externals =
    ruff
    ruff format
extras =
    test
commands =
    ruff format viserna
    ruff format tests

[testenv:lint]
allowlist_externals =
    ruff
    ruff check
    mypy
extras =
    test
commands =
    ruff check viserna tests
    mypy viserna tests

[testenv:build]
allowlist_externals =
    poetry
extras =
    doc
    dev
commands =
    poetry build
